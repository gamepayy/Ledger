basePath: /api/v1
definitions:
  v1.Ledger:
    properties:
      account:
        type: string
      balance:
        type: string
    type: object
  v1.LedgerChangeRequest:
    properties:
      account:
        type: string
      amount:
        type: string
      currency:
        type: string
    type: object
  v1.Token:
    properties:
      address:
        type: string
      decimals:
        type: string
      name:
        type: string
      symbol:
        type: string
    type: object
  v1.TransferRequest:
    properties:
      amount:
        type: string
      currency:
        type: string
      from:
        type: string
      to:
        type: string
    type: object
  v1.Withdraw:
    properties:
      account:
        type: string
      amount:
        type: string
      issueTimestamp:
        type: string
      pending:
        type: boolean
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This API is used to manage the GP ledger. It is used to create, read,
    update and delete ledgers, to create, read, update and delete pending withdraws,
    and to create, read, update and delete tokens to the system.
  title: GP API
  version: "1.0"
paths:
  /token:
    get:
      parameters:
      - description: Token
        in: query
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Token'
        "400":
          description: 'Bad request: no query found'
          schema:
            type: string
        "404":
          description: Token not found
          schema:
            type: string
      summary: Gets a token's data
  /token/delete:
    delete:
      parameters:
      - description: Token
        in: query
        name: address
        required: true
        type: string
      responses:
        "200":
          description: DB deletion success
          schema:
            type: string
        "400":
          description: 'Bad request: error message'
          schema:
            type: string
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Deletes a token
  /token/new:
    post:
      parameters:
      - description: Token
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.Token'
      produces:
      - application/json
      responses:
        "200":
          description: "True"
          schema:
            type: boolean
        "400":
          description: 'Bad request: error message'
          schema:
            type: string
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Creates a new token
  /token/update:
    put:
      parameters:
      - description: Token
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.Token'
      produces:
      - application/json
      responses:
        "200":
          description: "True"
          schema:
            type: boolean
        "400":
          description: 'Bad request: error message'
          schema:
            type: string
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Updates a token's data
  /user:
    get:
      parameters:
      - description: Account
        in: query
        name: account
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Ledger'
        "400":
          description: 'Bad request: no query found'
          schema:
            type: string
        "404":
          description: Account not found
          schema:
            type: string
      summary: Gets an account's data
  /user/delete:
    delete:
      parameters:
      - description: Account
        in: body
        name: account
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Account successfully deleted
          schema:
            type: string
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Deletes an account
  /user/deposit:
    put:
      parameters:
      - description: Deposit details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.LedgerChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Deposits an amount to an account
  /user/new:
    post:
      parameters:
      - description: Account details
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/v1.Ledger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Ledger'
        "400":
          description: 'Bad request: no body found'
          schema:
            type: string
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Creates a new account with a ledger
  /user/transfer:
    put:
      parameters:
      - description: Transfer details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.TransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Transfers an amount from one account to another
  /user/withdraw:
    put:
      parameters:
      - description: Withdraw details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.LedgerChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
      summary: Withdraws an amount from an account
  /withdraws:
    get:
      parameters:
      - description: Account
        in: query
        name: account
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Withdraw'
            type: array
        "400":
          description: 'Bad request: error message'
          schema:
            type: string
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Gets an account's withdraws data
  /withdraws/clean:
    delete:
      produces:
      - application/json
      responses:
        "200":
          description: "True"
          schema:
            type: boolean
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Removes all finished withdraws from the database and adds them to the
        finished withdraws table
  /withdraws/delete:
    delete:
      parameters:
      - description: Withdraw
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.Withdraw'
      produces:
      - application/json
      responses:
        "200":
          description: "True"
          schema:
            type: boolean
        "400":
          description: 'Bad request: error message'
          schema:
            type: string
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Removes a pending withdraw from the database
  /withdraws/new:
    post:
      parameters:
      - description: Withdraw
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.Withdraw'
      produces:
      - application/json
      responses:
        "200":
          description: "True"
          schema:
            type: boolean
        "400":
          description: 'Bad request: error message'
          schema:
            type: string
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Inserts a pending withdraw into the database
  /withdraws/process:
    put:
      parameters:
      - description: Withdraw
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.Withdraw'
      produces:
      - application/json
      responses:
        "200":
          description: "True"
          schema:
            type: boolean
        "400":
          description: 'Bad request: error message'
          schema:
            type: string
        "500":
          description: 'Internal server error: error message'
          schema:
            type: string
      summary: Sets a pending withdraw to finished
swagger: "2.0"
